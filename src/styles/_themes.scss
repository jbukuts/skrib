@use 'sass:map';
@use 'sass:color';
@use 'sass:meta';

$theme: 'dark' !default;

$light: (
  'color-scheme': 'light',
  'background': rgb(255, 255, 255),
  'foreground': rgb(0, 0, 0),
  'border': rgb(222, 222, 222),
  // file view
  'fileview-background': rgb(242, 242, 247), 
  'fileview-foreground': rgb(255,255,255),
  // file item
  'fileitem-background': rgb(229, 229, 234),
  'fileitem-foreground': rgb(0,0,0),
  // text input
  'input-background': rgb(242, 242, 247),
  'input-foreground': rgb(0,0,0),
  'input-border': rgb(222, 222, 222),
  // select dropdown
  'select-background': rgb(242, 242, 247),
  'select-foreground': rgb(0,0,0),
  'select-border': rgb(222, 222, 222),
  'select-background_item--active': rgb(199, 199, 204),
  'select-foreground_item--active': rgb(0, 0, 0),
  'select-background_item--hover': rgb(199, 199, 204),
  'select-foreground_item--hover': rgb(0, 0, 0),
  // slider
  'slider-background_track': rgb(142, 142, 147),
  'slider-background_rail': rgb(142, 142, 147),
  'slider-background_thumb': rgb(142, 142, 147),
  // switch
  'switch-background_track': rgb(199, 199, 204),
  'switch-background_track--active': rgb(40, 205, 65),
  'switch-background_thumb': rgb(255, 255, 255),
  'switch-border_thumb': rgb(222, 222, 222),
  // button
  'button-background': rgb(174, 174, 178),
  'button-foreground': rgb(174, 174, 178),
  'button-border': green,
  'button-background--danger': rgb(255, 59, 48),
  'button-foreground--danger': rgb(255, 255, 255),
  'button-border--danger': rgb(255, 59, 48),
  // ansi colors
  'red': rgb(255, 59, 48),
  'green': rgb(40, 205, 65),
  'yellow': rgb(255, 204, 0),
  'blue': rgb(0, 122, 255),
  'pink': rgb(255, 45, 85),
  'cyan': rgb(85, 190, 240),
  'white': rgb(255, 255, 255),
  'black': rgb(0, 0, 0),
  'gray': rgb(70, 70, 70)
);


$dark: (
  'color-scheme': 'dark',
  'background': rgb(21, 21, 21),
  'foreground': rgb(215, 215, 215),
  'border': rgb(127, 127, 127),
  // file view
  'fileview-background': rgb(28, 28, 30), 
  'fileview-foreground': rgb(255,255,255),
  // file item
  'fileitem-background': rgb(44, 44, 46),
  'fileitem-foreground': rgb(215, 215, 215),
  // text input
  'input-background': rgb(28, 28, 30),
  'input-foreground': rgb(215, 215, 215),
  'input-border': rgb(127, 127, 127),
  // select dropdown
  'select-background': rgb(28, 28, 30),
  'select-foreground': rgb(215, 215, 215),
  'select-border': rgb(127, 127, 127),
  'select-background_item--active': rgb(72, 72, 74),
  'select-foreground_item--active': rgb(215, 215, 215),
  'select-background_item--hover': rgb(72, 72, 74),
  'select-foreground_item--hover': rgb(215, 215, 215),
  // slider
  'slider-background_track': rgb(152, 152, 157),
  'slider-background_rail': rgb(152, 152, 157),
  'slider-background_thumb': rgb(152, 152, 157),
  // switch
  'switch-background_track': rgb(72, 72, 74),
  'switch-background_track--active': rgb(40, 205, 65),
  'switch-background_thumb': rgb(215, 215, 215),
  'switch-border_thumb': rgb(207, 207, 207),
  // button
  'button-background': rgb(174, 174, 178),
  'button-foreground': rgb(174, 174, 178),
  'button-border': green,
  'button-background--danger': rgb(255, 69, 58),
  'button-foreground--danger': rgb(255, 255, 255),
  'button-border--danger': rgb(255, 69, 48),
  // ansi colors
  'red': rgb(255, 69, 58),
  'green': rgb(50, 215, 75),
  'yellow': rgb(255, 214, 10),
  'blue': rgb(10, 132, 255),
  'pink': rgb(255, 55, 95),
  'cyan': rgb(90, 200, 245),
  'white': rgb(255, 255, 255),
  'black': rgb(0, 0, 0),
  'gray': rgb(207, 207, 207)
);

$gruvbox-light: (  
  'color-scheme': 'light',
  'background': #fbf1c7,
  'foreground': #282828,
  'border': #c8b899,
  // file view
  'fileview-background': #ecddb4, 
  'fileview-foreground': #282828,
  // file item
  'fileitem-background': #d9c8a4,
  'fileitem-foreground': #282828,
  // text input
  'input-background': #d9c8a4,
  'input-foreground': #282828,
  'input-border': #5b534d,
  // select dropdown
  'select-background': #ecddb4,
  'select-foreground': #282828,
  'select-border': #5b534d,
  'select-background_item--active': #d9c8a4,
  'select-foreground_item--active': #282828,
  'select-background_item--hover': #c3b795,
  'select-foreground_item--hover': #282828,
  // slider
  'slider-background_track': #c8b899,
  'slider-background_rail': #c8b899,
  'slider-background_thumb': #c8b899,
  // switch
  'switch-background_track': #c8b899,
  'switch-background_track--active': #797410,
  'switch-background_thumb': #d9c8a4,
  'switch-border_thumb': #c3b795,
  // button
  // TODO: add normal, focus, success, warning tokens
  'button-background': rgb(174, 174, 178),
  'button-foreground': rgb(174, 174, 178),
  'button-border': green,
  'button-background--danger': #9d0308,
  'button-foreground--danger': #f4d1c9,
  'button-border--danger': #e8ac9e,
  // ansi colors
  'red': #9d0308,
  'green': #797410,
  'yellow': #b57615,
  'blue': #0b6678,
  'pink': #7c6f64,
  'cyan': #437b59,
  'white': #282828,
  'black': #fbf1c7,
  'gray': #625959
);


$themes-colors: (
  light: $light,
  dark: $dark,
  gruvbox-light: $gruvbox-light
);

// helper to deep merge arbitrary map list
@function map-collect($maps...) {
  $collection: ();

  @each $map in $maps {
    $collection: map.deep-merge($collection, $map);
  }
  @return $collection;
}

@function split-color($c) {
  @return '#{color.red($c)}, #{color.green($c)}, #{color.blue($c)}';
}

// provide all tokens by data attribute to selector
@mixin provide-theme-tokens($selector: ':root', $additional-tokens: ()) {
  $themes-merged: $themes-colors;

  // create css properties for each theme
  @each $theme-name, $properties in $themes-merged {
    #{$selector}[data-theme='#{$theme-name}'] {
      // define a css variable for each property
      @each $name, $property in $properties {
        @if (meta.type-of($property) == 'color') {
          --color-#{$name}: #{split-color($property)};
        }
        @else if ($name == 'color-scheme') {
          #{$name}: #{$property}
        }
        @else {
          --effect-#{$name}: #{$property};
        }
      }

      @each $token-name, $token-color in $additional-tokens {
        #{$token-name}: map.get($themes-merged, $theme-name, $token-color);
      }
    }
  }
}

// return the color from var or default configured
@function get-color($name, $alpha: 1) {
  $default-color: #{split-color(map.get($themes-colors, $theme, $name))};
  @return rgba(var(--color-#{$name}, $default-color), $alpha);
}

@function get-prop($name) {
  $default-effect: map.get($themes-effects, $theme, $name);
  @return var(--effect-#{$name}, $default-effect);
}
